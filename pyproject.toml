[tool.pdm]

[project]
name = "np_audio_control"
version = "0.1.0"
description = "Tools for remote control of Windows system audio on Mindscope Neuropixels and Behavior rigs."
authors = [
    {name = "Ben Hardcastle", email = "ben.hardcastle@alleninstitute.org"},
]
dependencies = [
    "fabric>=3.0.0",
    "np-config>=0.4.17",
    "np-logging>=0.5.1",
]
requires-python = ">=3.7,<4"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
]
[project.urls]
Repository = "https://github.com/AllenInstitute/np_audio_control"
"Bug Tracker" = "https://github.com/AllenInstitute/np_audio_control/issues"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project.optional-dependencies]
dev = [
    "blue>=0.9.1",
    "pytest>=7.2.2",
    "mypy>=1.1.1",
    "coverage[toml]>=7.2.2",
    "pdm>=2.4.9",
    "pytest-cov>=4.0.0",
    "bump>=1.3.2",
    "types-backports>=0.1.3",
    "ruff>=0.0.260",
]

[tool.pdm.scripts]
# usage: pdm run <script> [args]
ruff = "ruff --fix src"
blue = "blue src"
pytest = "pytest --cov"
prebuild = {composite = ["blue", "ruff", "pytest"]}
bump = "pdm bump patch" # defaults to patch; `pdm run bump -m` to bump minor
build = {composite = ["prebuild", "pdm build"]}
dry-run = {composite = ["prebuild", "pdm build", "pdm publish --no-build --repository https://test.pypi.org/simple"]}
publish = {composite = ["prebuild", "pdm build", "pdm publish --no-build"]}

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
]

doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]

testpaths = [
    "tests",
    "src",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["np_audio_control"]

[tool.coverage.report]
show_missing = true
